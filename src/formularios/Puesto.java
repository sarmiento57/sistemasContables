/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package formularios;

import clases.Conexion;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sistemacontable.Cuenta;
import sistemacontable.SubCuenta;

/**
 *
 * @author Carlos Escobar - ES21001
 */
public class Puesto extends javax.swing.JPanel {

    /**
     * Creates new form Puesto
     */
    Conexion connect = new Conexion();
    
    public Puesto() {
        initComponents();
        actualizarTabla(tbCargo);
        
        
 

        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSalarioNominal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtRecargoVaca = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCargo = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnAutualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        spHoraLaborados = new javax.swing.JTextField();
        spDiasLaborales = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtIsss = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtAfp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtIncaf = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CARGO LABORAL");

        jLabel2.setText("Nombre del cargo:");

        jLabel3.setText("Salario nominal:");

        jLabel4.setText("Horas trabajas(Día):");

        jLabel6.setText("Días laborales(Semana):");

        jLabel7.setText("Porcentaje de recargo vacación:");

        tbCargo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cargo", "Salario", "Días", "Horas", "Recargo vacación", "ISSS", "AFP", "INCAF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCargoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbCargoMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tbCargo);
        if (tbCargo.getColumnModel().getColumnCount() > 0) {
            tbCargo.getColumnModel().getColumn(0).setMinWidth(40);
            tbCargo.getColumnModel().getColumn(0).setMaxWidth(40);
            tbCargo.getColumnModel().getColumn(3).setMinWidth(50);
            tbCargo.getColumnModel().getColumn(3).setMaxWidth(50);
            tbCargo.getColumnModel().getColumn(4).setMinWidth(50);
            tbCargo.getColumnModel().getColumn(4).setMaxWidth(50);
            tbCargo.getColumnModel().getColumn(6).setMinWidth(50);
            tbCargo.getColumnModel().getColumn(6).setMaxWidth(50);
            tbCargo.getColumnModel().getColumn(7).setMinWidth(50);
            tbCargo.getColumnModel().getColumn(7).setMaxWidth(50);
            tbCargo.getColumnModel().getColumn(8).setMinWidth(50);
            tbCargo.getColumnModel().getColumn(8).setMaxWidth(50);
        }

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Listado de puestos laborales");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnAutualizar.setText("Autualizar");
        btnAutualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel5.setText("ISSS: (%)");

        jLabel8.setText("AFP: (%)");

        txtAfp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAfpActionPerformed(evt);
            }
        });

        jLabel10.setText("INCAF: (%)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(190, 190, 190)
                        .addComponent(btnAutualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(208, 208, 208)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRecargoVaca, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIsss, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtAfp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIncaf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSalarioNominal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spHoraLaborados, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spDiasLaborales, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(22, 22, 22)
                                .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSalarioNominal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(spHoraLaborados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spDiasLaborales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtRecargoVaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAfp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(txtIncaf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtIsss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAutualizar)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String cargo = txtCargo.getText();
        String salarioNominal = txtSalarioNominal.getText();
        String horas = spHoraLaborados.getText();
        String dias = spDiasLaborales.getText();
        String recargo = txtRecargoVaca.getText();
        String isss = txtIsss.getText();
        String afp = txtAfp.getText();
        String incaf = txtIncaf.getText();

        if (cargo.isEmpty() || salarioNominal.isEmpty() || horas.isEmpty() || dias.isEmpty() || recargo.isEmpty()|| isss.isEmpty() || afp.isEmpty() || incaf.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
        } else {
            try {
                double salario = Double.parseDouble(salarioNominal);
                double recargoPor = Double.parseDouble(recargo);
                double diass = Double.parseDouble(dias);
                double horass = Double.parseDouble(horas);
                double issss = Double.parseDouble(isss);
                double afpp = Double.parseDouble(afp);
                double incaff = Double.parseDouble(incaf);

                try {
                    connect.conectar();
                    String sentenciaVerificacion = "SELECT COUNT(*) FROM cargo WHERE nombre_cargo = ?";
                    PreparedStatement psVerificar = this.connect.getConexion().prepareStatement(sentenciaVerificacion);
                    psVerificar.setString(1, cargo);

                    ResultSet rs = psVerificar.executeQuery();
                    if (rs.next() && rs.getInt(1) > 0) {
                        JOptionPane.showMessageDialog(this, "El cargo ya existe.");
                    } else {
                        String sentencia = "INSERT INTO cargo (nombre_cargo, salario_nominal, dias_laborados, horas_laborados, recargo, isss, afp, incaf) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                        PreparedStatement ps = this.connect.getConexion().prepareStatement(sentencia);

                        ps.setString(1, cargo);
                        ps.setDouble(2, salario);
                        ps.setDouble(3, diass);
                        ps.setDouble(4, horass);
                        ps.setDouble(5, recargoPor);
                        ps.setDouble(6, issss);
                        ps.setDouble(7, afpp);
                        ps.setDouble(8, incaff);

                        ps.executeUpdate();

                        JOptionPane.showMessageDialog(this, "Datos guardados correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                        txtCargo.setText("");
                        txtSalarioNominal.setText("");
                        spHoraLaborados.setText("");
                        spDiasLaborales.setText("");
                        txtRecargoVaca.setText("");
                        txtIsss.setText("");
                        txtAfp.setText("");
                        txtIncaf.setText("");
                        

                        actualizarTabla(tbCargo);
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error al guardar los datos.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese valores válidos para los campos numéricos.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAutualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutualizarActionPerformed
        String cargo = txtCargo.getText();
        double salarioNominal = Double.parseDouble(txtSalarioNominal.getText());
        double diasLaborales = Double.parseDouble(spDiasLaborales.getText());
        double horasLaboradas = Double.parseDouble(spHoraLaborados.getText());
        double recargo = Double.parseDouble(txtRecargoVaca.getText());
        double isss = Double.parseDouble(txtIsss.getText());
        double afp = Double.parseDouble(txtAfp.getText());
        double incaf = Double.parseDouble(txtIncaf.getText());

       
        if (cargo.isEmpty() || salarioNominal <= 0 || diasLaborales <= 0 || horasLaboradas <= 0 || recargo < 0 || isss <= 0 || afp <= 0 || incaf <= 0 ) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos correctamente.");
            return;
        }

        try {
            String sentenciaUpdate = "UPDATE cargo SET salario_nominal = ?, dias_laborados = ?, horas_laborados = ?, recargo = ?, isss = ?, afp = ?, incaf = ? WHERE nombre_cargo = ?";

            PreparedStatement sentencia = connect.getConexion().prepareStatement(sentenciaUpdate);

           
            sentencia.setDouble(1, salarioNominal);          
            sentencia.setDouble(2, diasLaborales);
            sentencia.setDouble(3, horasLaboradas);
            sentencia.setDouble(4, recargo);
            sentencia.setDouble(5, isss);
            sentencia.setDouble(6, afp);
            sentencia.setDouble(7, incaf);
            sentencia.setString(8, cargo);

            
            int rowsUpdated = sentencia.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Datos actualizados correctamente.");
                actualizarTabla(tbCargo); 
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar los datos.");
            }

            sentencia.close();
            txtCargo.setText("");
            txtSalarioNominal.setText("");
            spHoraLaborados.setText("");
            spDiasLaborales.setText("");
            txtRecargoVaca.setText("");
            txtIsss.setText("");
            txtAfp.setText("");
            txtIncaf.setText(""); 
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al actualizar los datos: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAutualizarActionPerformed

    private void tbCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCargoMouseClicked
        int filaSeleccionada = tbCargo.getSelectedRow();

        if (filaSeleccionada != -1) {
            
            Object valorCargo = tbCargo.getValueAt(filaSeleccionada, 1);
            Object valorSalarioNominal = tbCargo.getValueAt(filaSeleccionada, 2);
            Object valorDiasLaborados = tbCargo.getValueAt(filaSeleccionada, 3);
            Object valorHorasLaboradas = tbCargo.getValueAt(filaSeleccionada, 4);
            Object valorRecargo = tbCargo.getValueAt(filaSeleccionada, 5);
            Object valorIsss = tbCargo.getValueAt(filaSeleccionada, 6);
            Object valorAfp = tbCargo.getValueAt(filaSeleccionada, 7);
            Object valorIncaf = tbCargo.getValueAt(filaSeleccionada, 8);

    
            txtCargo.setText(valorCargo != null ? valorCargo.toString() : "");
            txtSalarioNominal.setText(valorSalarioNominal != null ? valorSalarioNominal.toString() : "");
            spDiasLaborales.setText(valorDiasLaborados != null ? valorDiasLaborados.toString() : "");
            spHoraLaborados.setText(valorHorasLaboradas != null ? valorHorasLaboradas.toString() : "");
            txtRecargoVaca.setText(valorRecargo != null ? valorRecargo.toString() : "");
            txtIsss.setText(valorIsss != null ? valorIsss.toString() : "");
            txtAfp.setText(valorAfp != null ? valorAfp.toString() : "");
            txtIncaf.setText(valorIncaf != null ? valorIncaf.toString() : "");
        }
    
    }//GEN-LAST:event_tbCargoMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tbCargo.getSelectedRow();

        if (filaSeleccionada != -1) {

            int confirmacion = JOptionPane.showConfirmDialog(this,
                    "¿Estás seguro que quieres eliminar este cargo?",
                    "Confirmar Eliminación",
                    JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                try {

                    String idIndirectosStr = (String) tbCargo.getValueAt(filaSeleccionada, 0);

                    int idindirectos = Integer.parseInt(idIndirectosStr);

                    String sentencia = "DELETE FROM cargo WHERE idservicio = ?";
                    PreparedStatement ps = connect.getConexion().prepareStatement(sentencia);
                    ps.setInt(1, idindirectos);
                    int filasAfectadas = ps.executeUpdate();
                    ps.close();

                    if (filasAfectadas > 0) {
                        JOptionPane.showMessageDialog(this, "El cargo/puesto se eliminó correctamente.", "Eliminación Exitosa", JOptionPane.INFORMATION_MESSAGE);

                        DefaultTableModel modeloT = (DefaultTableModel) tbCargo.getModel();
                        modeloT.removeRow(filaSeleccionada);
                    } else {
                        JOptionPane.showMessageDialog(this, "No se encontró el puesto para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Ocurrió un error al intentar eliminar el puesto.", "Error", JOptionPane.ERROR_MESSAGE);
                } catch (NumberFormatException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "El valor del ID no es válido.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un puesto para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtAfpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAfpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAfpActionPerformed

    private void tbCargoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCargoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tbCargoMouseEntered
    
        
    public void actualizarTabla(JTable tabla) {
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0); 

        try {
            String sentencia = "SELECT idservicio, nombre_cargo, salario_nominal, dias_laborados, horas_laborados, recargo, isss, afp, incaf FROM cargo ORDER BY idservicio";
            PreparedStatement sentencia1;
            sentencia1 = null;
            sentencia1 = this.connect.getConexion().prepareCall(sentencia);
            ResultSet rs = sentencia1.executeQuery();
            while (rs.next()) {
                String id = rs.getString("idservicio");
                String nombre = rs.getString("nombre_cargo");
                double salarioNominal = rs.getDouble("salario_nominal");
                double dias = rs.getDouble("dias_laborados");
                double horas = rs.getDouble("horas_laborados"); 
                double recargo = rs.getDouble("recargo");
                double isss = rs.getDouble("isss");
                double afp = rs.getDouble("afp");
                double incaf = rs.getDouble("incaf");
                


                modelo.addRow(new Object[]{id, nombre, salarioNominal, dias, horas, recargo, isss, afp, incaf});

            }
            rs.close();
            txtCargo.setText("");
            txtSalarioNominal.setText("");
            spHoraLaborados.setText("");
            spDiasLaborales.setText("");
            txtRecargoVaca.setText("");
            txtIsss.setText("");
            txtAfp.setText("");
            txtIncaf.setText("");
            
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField spDiasLaborales;
    private javax.swing.JTextField spHoraLaborados;
    private javax.swing.JTable tbCargo;
    private javax.swing.JTextField txtAfp;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtIncaf;
    private javax.swing.JTextField txtIsss;
    private javax.swing.JTextField txtRecargoVaca;
    private javax.swing.JTextField txtSalarioNominal;
    // End of variables declaration//GEN-END:variables
}
